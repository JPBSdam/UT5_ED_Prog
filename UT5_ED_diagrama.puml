@startuml
class Concesionario {
- concesionario: ArrayList<Vehiculo>

+ buscarVehiculo(): Vehiculo
+ listarVehiculos(): String
+ asignarVehiculo(): void
}

abstract class Vehiculo {
# matricula: String
# marca: String
# modelo: String
# añoFabricacion: int
# kilometraje: int
# precio: double
# estado: Estado
# propietario: persona

+ toString(): String
+ calcularRiesgo(): String
}

class Coche{
# numPuertas: int
# tipoCombustible: TipoCombustible
# capacidadMaletero: int
# traccion: Traccion
}

class Sedan{
- espacioInterior: double
- nivelConfort: NivelConfort

+ calcularDepreciación(): double
}
class Suv {
- capacidadOffroad: boolean
- alturaLibreSuelo: double

+ Valorable(): double
}
class Deportivo {
- aceleracion0a100: double
- potenciaCV: int
- tieneModoPista: boolean

+ calcularDepreciación(): double
}

class Moto{
# cilindrada: int
# peso: int
# alturaAsiento: double
# tipoTransmision: TipoTransmision
}

class Scooter{
-espacioBajoAsiento: int

+ calcularDepreciación(): double
}

class Deportiva{
- velocidadMaxima: double
- tieneQuickShifter: boolean

+ calcularDepreciación(): double
}

class Camion{
- capacidadCarga: double
- numEjes: int
- longitudRemolque: double
- potenciaMotor: int

+ calcularDepreciación(): double
}

class Persona{
- nombre: String
- dni: String
- fechaCaducidadCarnet: LocalDate
- añoNacimiento: int
}

interface Valorable{
+ calcularDepreciación(): double
}

enum Estado {
DISPONIBLE
VENDIDO
}

enum TipoCombustible {
GASOLINA
DIESEL
HÍBRIDO
ELÉCTRICO
}

enum Traccion {
DELANTERA
TRASERA
4X4
}

enum NivelConfort {
BÁSICO
MEDIO
PREMIUM
}

enum TipoTransmision {
MANUAL
AUTOMÁTICA
}

Concesionario --> Vehiculo
Vehiculo --> Persona
Vehiculo --> Estado
Vehiculo ..|> Valorable
Vehiculo <|-- Coche
Vehiculo <|-- Moto
Vehiculo <|-- Camion
Coche <|-- Sedan
Coche <|-- Suv
Coche <|-- Deportivo
Coche --> TipoCombustible
Sedan --> NivelConfort
Suv --> Traccion
Moto <|-- Scooter
Moto <|-- Deportiva
Moto --> TipoTransmision

@enduml